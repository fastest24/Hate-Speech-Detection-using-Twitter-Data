{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Task5 ML","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyPBOL3PJUnPZfRVm1O0UBsC"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"AlOL435-r7tX","colab_type":"code","colab":{}},"source":["#import statements\n","import tweepy\n","import pandas as pd\n","import numpy as np\n","import re\n","from textblob import TextBlob\n","import matplotlib.pyplot as plt\n","from sklearn.naive_bayes import MultinomialNB\n","from sklearn.model_selection import train_test_split\n","from sklearn.pipeline import Pipeline\n","from sklearn.metrics import confusion_matrix, classification_report,accuracy_score\n","from sklearn.feature_extraction.text import CountVectorizer, TfidfTransformer\n","import pickle"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"HkTBIzRLG_Ju","colab_type":"code","colab":{}},"source":["#authenticating data and storing it\n","\n","authenticate = tweepy.OAuthHandler('mOHuQqsyMYOO5Fg9FAwz0qQC0', 'TRFKAo7vnxL6LZw4CkJHkHSS9JDyoVriIemjGgtseDCiSdPc79')\n","\n","authenticate.set_access_token('991299169158647819-TTEbM9nDbCm9bdIIW031gLjOhLJ6uoE', 'm2WQNeCVcX479me2ZIk1Mg9QtwxrH3mtOZeaEXchg2u57')\n","\n","api = tweepy.API(auth_handler= authenticate, wait_on_rate_limit=True)\n","\n","posts = api.user_timeline(screen_name= 'realDonaldTrump', count = 1000, lang = 'en', tweet_mode = 'extended')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"uPzRbTMOOnTu","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":51},"outputId":"26fb9548-d58f-45e9-81ad-c475efd532b4","executionInfo":{"status":"ok","timestamp":1591887573514,"user_tz":-330,"elapsed":1033,"user":{"displayName":"Khush Gandhi","photoUrl":"","userId":"14578174749644198942"}}},"source":["#creating dataset\n","df = pd.DataFrame([tweet.full_text for tweet in posts], columns = ['Tweets'])\n","\n","def clean_text(text):\n","  text = re.sub(r'@[A-Za-z0-9]+', '', text)\n","  text = re.sub(r'#', '', text)\n","  text = re.sub(r'RT[\\s]+', '', text)\n","  text = re.sub(r'http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+', '', text)\n","\n","  return text\n","\n","df['Tweets'] = df['Tweets'].apply(clean_text)\n","df['Tweets'].head()"],"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    THOSE THAT DENY THEIR HISTORY ARE DOOMED TO RE...\n","Name: Tweets, dtype: object"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"id":"NpaE-8b_NQnC","colab_type":"code","colab":{}},"source":["#getting subjectivity & polarity to analyse tweets\n","def get_subjectivity(text):\n","  return TextBlob(text).sentiment.subjectivity\n","\n","def get_polarity(text):\n","  return TextBlob(text).sentiment.polarity\n","\n","df['Subjectivity'] = df['Tweets'].apply(get_subjectivity)\n","df['Polarity'] = df['Tweets'].apply(get_polarity)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"aFIi2vt1pgL_","colab_type":"code","colab":{}},"source":["#finding toxicity using polarity\n","def get_analysis(score):\n","  if score < 0:\n","    return \"Toxic\"\n","  else:\n","    return \"Not Toxic\"\n","\n","df['Toxicity'] = df['Polarity'].apply(get_analysis)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"_9ZRKjmbs_mb","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":49},"outputId":"b62e60b9-580b-4f85-d43c-43fed2dedce0","executionInfo":{"status":"ok","timestamp":1591887600890,"user_tz":-330,"elapsed":683,"user":{"displayName":"Khush Gandhi","photoUrl":"","userId":"14578174749644198942"}}},"source":["#reframing data for model\n","\n","dummies = pd.get_dummies(df['Toxicity'])\n","merged = pd.concat([df, dummies], axis = 'columns')\n","new_df = merged.drop(['Subjectivity', 'Toxicity', 'Not Toxic'], axis='columns')\n","new_df = new_df.drop(['Polarity'], axis='columns')\n","new_df = new_df[1:]\n","new_df.head()"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Tweets</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["Empty DataFrame\n","Columns: [Tweets]\n","Index: []"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"id":"fkZWav4k1YWW","colab_type":"code","colab":{}},"source":["#vectorizing data\n","pipeline = Pipeline([\n","    ('bow',CountVectorizer()),  \n","    ('tfidf', TfidfTransformer()),  \n","    ('classifier', MultinomialNB()), \n","])"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"l9sIevQB1cqe","colab_type":"code","outputId":"867e75a5-676d-4168-a496-b6b8678cea99","executionInfo":{"status":"ok","timestamp":1591652390776,"user_tz":-330,"elapsed":885,"user":{"displayName":"Khush Gandhi","photoUrl":"","userId":"14578174749644198942"}},"colab":{"base_uri":"https://localhost:8080/","height":275}},"source":["#model validation\n","tweet_train, tweet_test, label_train, label_test = train_test_split(new_df['Tweets'], new_df['Toxic'], test_size=0.2)\n","pipeline.fit(tweet_train,label_train)\n","predictions = pipeline.predict(tweet_test)\n","print(classification_report(predictions,label_test))\n","print(confusion_matrix(predictions,label_test))\n","print(accuracy_score(predictions,label_test))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       1.00      0.95      0.97        40\n","           1       0.00      0.00      0.00         0\n","\n","    accuracy                           0.95        40\n","   macro avg       0.50      0.47      0.49        40\n","weighted avg       1.00      0.95      0.97        40\n","\n","[[38  2]\n"," [ 0  0]]\n","0.95\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/sklearn/metrics/_classification.py:1272: UndefinedMetricWarning: Recall and F-score are ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"],"name":"stderr"}]}]}